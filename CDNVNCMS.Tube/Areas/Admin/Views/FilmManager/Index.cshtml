@using PagedList.Mvc
@model PagedList.IPagedList<CDNVNCMS.Tube.Entities.Film>
@{
    ViewBag.Title = "DANH SÁCH PHIM";
}

<h2>Category</h2>

<div class="row">
    <div class="col-md-4">
        <div class="form-inline">
            <div class="form-group">
                @Html.ActionLink("Tạo phim", "Create", "FilmManager", null, new {@class = "btn btn-primary"})
                <div class="dropdown div-inline">
                    <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">@ViewBag.Button
                        <span class="caret"></span></button>
                    <ul class="dropdown-menu">
                        <li><a href="@Url.Action("Index")">Tất Cả Phim</a></li>
                        <li><a href="@Url.Action("Featured")">Phim Nổi Bật</a></li>
                        <li><a href="@Url.Action("Error")">Phim Báo Lỗi</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8 text-right">
        <form method="get" action="@Url.Action("Index")" class="form-inline">
            <div class="form-group">
                <label  class="sr-only" for="s">Tìm kiếm</label>
                <input id="s" class="form-control" name="s" value="@Request.QueryString["s"]"/>

            </div>
            <button class="btn btn-default" type="submit">Tìm</button>
            @Html.ActionLink("Xóa lọc", "Index", "FilmManager", null, new { @class = "btn btn-danger" })
        </form>
    </div>
</div>

<br/>
<div>
    <table class="table table-bordered table-condensed table-striped">
        <thead>
        <tr>
            <th></th>
            <th>Hình Ảnh</th>
            <th>Tên Phim</th>
            <th>Nổi Bật</th>
            <th>Số tập</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr @(item.FilmParts.Any(p => p.isError)?"class=danger":"") >
                <td>@Html.CheckBox("Published", item.Published, new {value = item.Id, @class = "pub", data_onstyle = "primary", data_on = "Bật", data_off = "Tắt", data_toggle = "toggle"})</td>
                <td>
                    
                        @if (item.FilmParts != null && item.FilmParts.Any() && !string.IsNullOrWhiteSpace(item.ImageUrl))
                        {
                            <div class="thumbnail">
                                <img src="@item.ImageUrl" width="100" />
                                <div class="caption text-center">
                                    <p><button class="btn btn-primary btn-image" onclick="update_image(@item.Id, '@item.Name','update', '@item.ImageUrl')" data-id="@item.Id" role="button">Đổi ảnh</button> <button onclick="update_image(@item.Id, '@item.Name','delete')" class="btn btn-danger btn-image">Xóa</button></p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="thumbnail">
                                <img src="@item.ImageUrl" width="100" />
                                <div class="caption text-center">
                                    <p><button class="btn btn-primary btn-image" onclick="update_image(@item.Id, '@item.Name','insert')">Thêm ảnh</button></p>
                                </div>
                            </div>
                        }
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @Html.CheckBox("Featured", item.IsTrainler, new { value = item.Id, @class = "Featured", data_on = "Nổi Bật", data_off = "Tắt", data_onstyle = "info", data_toggle = "toggle" })
                </td>
                <td>
                    @if (item.FilmParts != null && item.FilmParts.Any())
                    {
                        <span>@item.FilmParts.Count tập</span>
                    }
                    else
                    {
                        <span>Chưa có</span>
                    }
                </td>
                <td style="text-align: center">
                    @Html.ActionLink("Sửa", "Edit", new {item.Id}, new {@class = "btn btn-primary"})
                    @Html.ActionLink("Sữa Lỗi", "ErrorDetails", new {item.Id}, new {@class = "btn btn-warning"})
                    @Html.ActionLink("Xem Phim", "FilmDetails", "Film", new { area = "", keyword = item.SEOName }, new { @class = "btn btn-info" })
                    @Html.ActionLink("Xóa", "Delete", new {item.Id}, new {@class = "btn btn-danger"})
                </td>
            </tr>
        }

        </tbody>
    </table>
</div>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
@section scripts
{
    <script type="text/javascript">
        function update_image(id, name, action, url) {
            var actionStat = true;

            switch (action) {
                case "insert":
                    url = prompt("Vui lòng nhập đường dẫn cho phim '" + name + "'.");
                    if (url == null) {
                        actionStat = false;
                    }
                    if (url === "") {
                        alert("Vui lòng không để trống!");
                        actionStat = false;
                    }
                break;
                case "update":
                    var durl = prompt("Vui lòng nhập đường dẫn cho phim '"+name+"'." , url);
                    if (durl == null) {
                        actionStat = false;
                    }
                    if (durl === "") {
                        alert("Vui lòng không để trống!");
                        actionStat = false;
                    }
                    if (durl === url) {
                        alert("Bạn chưa thay đổi đường dẫn!");
                        actionStat = false;
                    }
                break;
            case "delete":
                    actionStat = confirm("Bạn có muốn xóa hình ảnh của '" + name + "'?");
                break;
            }
            if (actionStat) {
                $.ajax({
                    url: '@Url.Action("ChangeImage")',
                    type: 'POST',
                    data: { id: id, action: action, url:url} ,
                    success: function (response) {
                        alert(response);
                        location.reload();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert(xhr.status);
                        alert(thrownError);
                        location.reload();
                    }
                });
            }
        }
        $(document).ready(function() {
            $('[type="checkbox"]').on("change", function () {
                var id = $(this).attr("value");
                var name = $(this).attr("id");
                $.ajax({
                    url: '@Url.Action("ChangeStatus")',
                    type: 'POST',
                    data: { id: id, name: name },
                    success: function (response) {
                        alert(response);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        //alert(xhr.status);
                        //alert(thrownError);
                        alert("Đã có lỗi, vui lòng thử lại!");
                    }
                });
                location.reload();
            });


        });
    </script>
}
